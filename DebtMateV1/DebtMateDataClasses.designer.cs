#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DebtMateV1
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DebtMateData")]
	public partial class DebtMateDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCompanySetup(CompanySetup instance);
    partial void UpdateCompanySetup(CompanySetup instance);
    partial void DeleteCompanySetup(CompanySetup instance);
    partial void InsertDebtor(Debtor instance);
    partial void UpdateDebtor(Debtor instance);
    partial void DeleteDebtor(Debtor instance);
    partial void InsertGender(Gender instance);
    partial void UpdateGender(Gender instance);
    partial void DeleteGender(Gender instance);
    partial void InsertMaritalStatuse(MaritalStatuse instance);
    partial void UpdateMaritalStatuse(MaritalStatuse instance);
    partial void DeleteMaritalStatuse(MaritalStatuse instance);
    partial void InsertDebtorContactDetail(DebtorContactDetail instance);
    partial void UpdateDebtorContactDetail(DebtorContactDetail instance);
    partial void DeleteDebtorContactDetail(DebtorContactDetail instance);
    partial void InsertCaseStatuse(CaseStatuse instance);
    partial void UpdateCaseStatuse(CaseStatuse instance);
    partial void DeleteCaseStatuse(CaseStatuse instance);
    partial void InsertCompanySetup1(CompanySetup1 instance);
    partial void UpdateCompanySetup1(CompanySetup1 instance);
    partial void DeleteCompanySetup1(CompanySetup1 instance);
    partial void InsertMaritalStatuse1(MaritalStatuse1 instance);
    partial void UpdateMaritalStatuse1(MaritalStatuse1 instance);
    partial void DeleteMaritalStatuse1(MaritalStatuse1 instance);
    partial void InsertGender1(Gender1 instance);
    partial void UpdateGender1(Gender1 instance);
    partial void DeleteGender1(Gender1 instance);
    #endregion
		
		public DebtMateDataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DebtMateDataConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DebtMateDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DebtMateDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DebtMateDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DebtMateDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CompanySetup> CompanySetups
		{
			get
			{
				return this.GetTable<CompanySetup>();
			}
		}
		
		public System.Data.Linq.Table<Debtor> Debtors
		{
			get
			{
				return this.GetTable<Debtor>();
			}
		}
		
		public System.Data.Linq.Table<Gender> Genders
		{
			get
			{
				return this.GetTable<Gender>();
			}
		}
		
		public System.Data.Linq.Table<MaritalStatuse> MaritalStatuses
		{
			get
			{
				return this.GetTable<MaritalStatuse>();
			}
		}
		
		public System.Data.Linq.Table<DebtorContactDetail> DebtorContactDetails
		{
			get
			{
				return this.GetTable<DebtorContactDetail>();
			}
		}
		
		public System.Data.Linq.Table<CaseStatuse> CaseStatuses
		{
			get
			{
				return this.GetTable<CaseStatuse>();
			}
		}
		
		public System.Data.Linq.Table<CompanySetup1> CompanySetup1s
		{
			get
			{
				return this.GetTable<CompanySetup1>();
			}
		}
		
		public System.Data.Linq.Table<MaritalStatuse1> MaritalStatuse1s
		{
			get
			{
				return this.GetTable<MaritalStatuse1>();
			}
		}
		
		public System.Data.Linq.Table<Gender1> Gender1s
		{
			get
			{
				return this.GetTable<Gender1>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompanySetups")]
	public partial class CompanySetup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CompanyName;
		
		private string _CompanyRegistrationNumber;
		
		private string _PhisicalAddress1;
		
		private string _PhisicalAddress2;
		
		private string _PhisicalAddress3;
		
		private string _PhisicalAddressCode;
		
		private string _PostalAddress1;
		
		private string _PostalAddress2;
		
		private string _PostalAddress3;
		
		private string _PostalAddressCode;
		
		private string _Telephone;
		
		private string _Fax;
		
		private string _Email;
		
		private string _VatRegistrationNumber;
		
		private bool _isActive;
		
		private System.DateTime _DateCreated;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnCompanyRegistrationNumberChanging(string value);
    partial void OnCompanyRegistrationNumberChanged();
    partial void OnPhisicalAddress1Changing(string value);
    partial void OnPhisicalAddress1Changed();
    partial void OnPhisicalAddress2Changing(string value);
    partial void OnPhisicalAddress2Changed();
    partial void OnPhisicalAddress3Changing(string value);
    partial void OnPhisicalAddress3Changed();
    partial void OnPhisicalAddressCodeChanging(string value);
    partial void OnPhisicalAddressCodeChanged();
    partial void OnPostalAddress1Changing(string value);
    partial void OnPostalAddress1Changed();
    partial void OnPostalAddress2Changing(string value);
    partial void OnPostalAddress2Changed();
    partial void OnPostalAddress3Changing(string value);
    partial void OnPostalAddress3Changed();
    partial void OnPostalAddressCodeChanging(string value);
    partial void OnPostalAddressCodeChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnVatRegistrationNumberChanging(string value);
    partial void OnVatRegistrationNumberChanged();
    partial void OnisActiveChanging(bool value);
    partial void OnisActiveChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public CompanySetup()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="VarChar(500)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyRegistrationNumber", DbType="VarChar(100)")]
		public string CompanyRegistrationNumber
		{
			get
			{
				return this._CompanyRegistrationNumber;
			}
			set
			{
				if ((this._CompanyRegistrationNumber != value))
				{
					this.OnCompanyRegistrationNumberChanging(value);
					this.SendPropertyChanging();
					this._CompanyRegistrationNumber = value;
					this.SendPropertyChanged("CompanyRegistrationNumber");
					this.OnCompanyRegistrationNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhisicalAddress1", DbType="VarChar(800)")]
		public string PhisicalAddress1
		{
			get
			{
				return this._PhisicalAddress1;
			}
			set
			{
				if ((this._PhisicalAddress1 != value))
				{
					this.OnPhisicalAddress1Changing(value);
					this.SendPropertyChanging();
					this._PhisicalAddress1 = value;
					this.SendPropertyChanged("PhisicalAddress1");
					this.OnPhisicalAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhisicalAddress2", DbType="VarChar(800)")]
		public string PhisicalAddress2
		{
			get
			{
				return this._PhisicalAddress2;
			}
			set
			{
				if ((this._PhisicalAddress2 != value))
				{
					this.OnPhisicalAddress2Changing(value);
					this.SendPropertyChanging();
					this._PhisicalAddress2 = value;
					this.SendPropertyChanged("PhisicalAddress2");
					this.OnPhisicalAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhisicalAddress3", DbType="VarChar(800)")]
		public string PhisicalAddress3
		{
			get
			{
				return this._PhisicalAddress3;
			}
			set
			{
				if ((this._PhisicalAddress3 != value))
				{
					this.OnPhisicalAddress3Changing(value);
					this.SendPropertyChanging();
					this._PhisicalAddress3 = value;
					this.SendPropertyChanged("PhisicalAddress3");
					this.OnPhisicalAddress3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhisicalAddressCode", DbType="VarChar(5)")]
		public string PhisicalAddressCode
		{
			get
			{
				return this._PhisicalAddressCode;
			}
			set
			{
				if ((this._PhisicalAddressCode != value))
				{
					this.OnPhisicalAddressCodeChanging(value);
					this.SendPropertyChanging();
					this._PhisicalAddressCode = value;
					this.SendPropertyChanged("PhisicalAddressCode");
					this.OnPhisicalAddressCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalAddress1", DbType="VarChar(800)")]
		public string PostalAddress1
		{
			get
			{
				return this._PostalAddress1;
			}
			set
			{
				if ((this._PostalAddress1 != value))
				{
					this.OnPostalAddress1Changing(value);
					this.SendPropertyChanging();
					this._PostalAddress1 = value;
					this.SendPropertyChanged("PostalAddress1");
					this.OnPostalAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalAddress2", DbType="VarChar(800)")]
		public string PostalAddress2
		{
			get
			{
				return this._PostalAddress2;
			}
			set
			{
				if ((this._PostalAddress2 != value))
				{
					this.OnPostalAddress2Changing(value);
					this.SendPropertyChanging();
					this._PostalAddress2 = value;
					this.SendPropertyChanged("PostalAddress2");
					this.OnPostalAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalAddress3", DbType="VarChar(800)")]
		public string PostalAddress3
		{
			get
			{
				return this._PostalAddress3;
			}
			set
			{
				if ((this._PostalAddress3 != value))
				{
					this.OnPostalAddress3Changing(value);
					this.SendPropertyChanging();
					this._PostalAddress3 = value;
					this.SendPropertyChanged("PostalAddress3");
					this.OnPostalAddress3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalAddressCode", DbType="VarChar(5)")]
		public string PostalAddressCode
		{
			get
			{
				return this._PostalAddressCode;
			}
			set
			{
				if ((this._PostalAddressCode != value))
				{
					this.OnPostalAddressCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalAddressCode = value;
					this.SendPropertyChanged("PostalAddressCode");
					this.OnPostalAddressCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="VarChar(10)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="VarChar(10)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(10)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VatRegistrationNumber", DbType="VarChar(100)")]
		public string VatRegistrationNumber
		{
			get
			{
				return this._VatRegistrationNumber;
			}
			set
			{
				if ((this._VatRegistrationNumber != value))
				{
					this.OnVatRegistrationNumberChanging(value);
					this.SendPropertyChanging();
					this._VatRegistrationNumber = value;
					this.SendPropertyChanged("VatRegistrationNumber");
					this.OnVatRegistrationNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isActive", DbType="Bit NOT NULL")]
		public bool isActive
		{
			get
			{
				return this._isActive;
			}
			set
			{
				if ((this._isActive != value))
				{
					this.OnisActiveChanging(value);
					this.SendPropertyChanging();
					this._isActive = value;
					this.SendPropertyChanged("isActive");
					this.OnisActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Debtors")]
	public partial class Debtor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Fisrtname;
		
		private string _LastName;
		
		private string _PreferredName;
		
		private string _IdNumber;
		
		private System.Nullable<System.DateTime> _DateOfBirth;
		
		private int _GenderID;
		
		private int _MaritalStatusID;
		
		private EntitySet<Gender> _Genders;
		
		private EntitySet<MaritalStatuse> _MaritalStatuses;
		
		private EntityRef<DebtorContactDetail> _DebtorContactDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFisrtnameChanging(string value);
    partial void OnFisrtnameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnPreferredNameChanging(string value);
    partial void OnPreferredNameChanged();
    partial void OnIdNumberChanging(string value);
    partial void OnIdNumberChanged();
    partial void OnDateOfBirthChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfBirthChanged();
    partial void OnGenderIDChanging(int value);
    partial void OnGenderIDChanged();
    partial void OnMaritalStatusIDChanging(int value);
    partial void OnMaritalStatusIDChanged();
    #endregion
		
		public Debtor()
		{
			this._Genders = new EntitySet<Gender>(new Action<Gender>(this.attach_Genders), new Action<Gender>(this.detach_Genders));
			this._MaritalStatuses = new EntitySet<MaritalStatuse>(new Action<MaritalStatuse>(this.attach_MaritalStatuses), new Action<MaritalStatuse>(this.detach_MaritalStatuses));
			this._DebtorContactDetail = default(EntityRef<DebtorContactDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._DebtorContactDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fisrtname", DbType="VarChar(250)")]
		public string Fisrtname
		{
			get
			{
				return this._Fisrtname;
			}
			set
			{
				if ((this._Fisrtname != value))
				{
					this.OnFisrtnameChanging(value);
					this.SendPropertyChanging();
					this._Fisrtname = value;
					this.SendPropertyChanged("Fisrtname");
					this.OnFisrtnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(250)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreferredName", DbType="VarChar(250)")]
		public string PreferredName
		{
			get
			{
				return this._PreferredName;
			}
			set
			{
				if ((this._PreferredName != value))
				{
					this.OnPreferredNameChanging(value);
					this.SendPropertyChanging();
					this._PreferredName = value;
					this.SendPropertyChanged("PreferredName");
					this.OnPreferredNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNumber", DbType="VarChar(250)")]
		public string IdNumber
		{
			get
			{
				return this._IdNumber;
			}
			set
			{
				if ((this._IdNumber != value))
				{
					this.OnIdNumberChanging(value);
					this.SendPropertyChanging();
					this._IdNumber = value;
					this.SendPropertyChanged("IdNumber");
					this.OnIdNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="DateTime2")]
		public System.Nullable<System.DateTime> DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this.OnDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DateOfBirth = value;
					this.SendPropertyChanged("DateOfBirth");
					this.OnDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenderID", DbType="Int NOT NULL")]
		public int GenderID
		{
			get
			{
				return this._GenderID;
			}
			set
			{
				if ((this._GenderID != value))
				{
					this.OnGenderIDChanging(value);
					this.SendPropertyChanging();
					this._GenderID = value;
					this.SendPropertyChanged("GenderID");
					this.OnGenderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaritalStatusID", DbType="Int NOT NULL")]
		public int MaritalStatusID
		{
			get
			{
				return this._MaritalStatusID;
			}
			set
			{
				if ((this._MaritalStatusID != value))
				{
					this.OnMaritalStatusIDChanging(value);
					this.SendPropertyChanging();
					this._MaritalStatusID = value;
					this.SendPropertyChanged("MaritalStatusID");
					this.OnMaritalStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Debtor_Gender", Storage="_Genders", ThisKey="GenderID", OtherKey="Id")]
		public EntitySet<Gender> Genders
		{
			get
			{
				return this._Genders;
			}
			set
			{
				this._Genders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Debtor_MaritalStatuse", Storage="_MaritalStatuses", ThisKey="MaritalStatusID", OtherKey="Id")]
		public EntitySet<MaritalStatuse> MaritalStatuses
		{
			get
			{
				return this._MaritalStatuses;
			}
			set
			{
				this._MaritalStatuses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DebtorContactDetail_Debtor", Storage="_DebtorContactDetail", ThisKey="Id", OtherKey="DebtorID", IsForeignKey=true)]
		public DebtorContactDetail DebtorContactDetail
		{
			get
			{
				return this._DebtorContactDetail.Entity;
			}
			set
			{
				DebtorContactDetail previousValue = this._DebtorContactDetail.Entity;
				if (((previousValue != value) 
							|| (this._DebtorContactDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DebtorContactDetail.Entity = null;
						previousValue.Debtors.Remove(this);
					}
					this._DebtorContactDetail.Entity = value;
					if ((value != null))
					{
						value.Debtors.Add(this);
						this._Id = value.DebtorID;
					}
					else
					{
						this._Id = default(int);
					}
					this.SendPropertyChanged("DebtorContactDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Genders(Gender entity)
		{
			this.SendPropertyChanging();
			entity.Debtor = this;
		}
		
		private void detach_Genders(Gender entity)
		{
			this.SendPropertyChanging();
			entity.Debtor = null;
		}
		
		private void attach_MaritalStatuses(MaritalStatuse entity)
		{
			this.SendPropertyChanging();
			entity.Debtor = this;
		}
		
		private void detach_MaritalStatuses(MaritalStatuse entity)
		{
			this.SendPropertyChanging();
			entity.Debtor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Genders")]
	public partial class Gender : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Description;
		
		private bool _isActive;
		
		private EntityRef<Debtor> _Debtor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnisActiveChanging(bool value);
    partial void OnisActiveChanged();
    #endregion
		
		public Gender()
		{
			this._Debtor = default(EntityRef<Debtor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._Debtor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isActive", DbType="Bit NOT NULL")]
		public bool isActive
		{
			get
			{
				return this._isActive;
			}
			set
			{
				if ((this._isActive != value))
				{
					this.OnisActiveChanging(value);
					this.SendPropertyChanging();
					this._isActive = value;
					this.SendPropertyChanged("isActive");
					this.OnisActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Debtor_Gender", Storage="_Debtor", ThisKey="Id", OtherKey="GenderID", IsForeignKey=true)]
		public Debtor Debtor
		{
			get
			{
				return this._Debtor.Entity;
			}
			set
			{
				Debtor previousValue = this._Debtor.Entity;
				if (((previousValue != value) 
							|| (this._Debtor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Debtor.Entity = null;
						previousValue.Genders.Remove(this);
					}
					this._Debtor.Entity = value;
					if ((value != null))
					{
						value.Genders.Add(this);
						this._Id = value.GenderID;
					}
					else
					{
						this._Id = default(int);
					}
					this.SendPropertyChanged("Debtor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MaritalStatuses")]
	public partial class MaritalStatuse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Description;
		
		private bool _isActive;
		
		private EntityRef<Debtor> _Debtor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnisActiveChanging(bool value);
    partial void OnisActiveChanged();
    #endregion
		
		public MaritalStatuse()
		{
			this._Debtor = default(EntityRef<Debtor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._Debtor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isActive", DbType="Bit NOT NULL")]
		public bool isActive
		{
			get
			{
				return this._isActive;
			}
			set
			{
				if ((this._isActive != value))
				{
					this.OnisActiveChanging(value);
					this.SendPropertyChanging();
					this._isActive = value;
					this.SendPropertyChanged("isActive");
					this.OnisActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Debtor_MaritalStatuse", Storage="_Debtor", ThisKey="Id", OtherKey="MaritalStatusID", IsForeignKey=true)]
		public Debtor Debtor
		{
			get
			{
				return this._Debtor.Entity;
			}
			set
			{
				Debtor previousValue = this._Debtor.Entity;
				if (((previousValue != value) 
							|| (this._Debtor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Debtor.Entity = null;
						previousValue.MaritalStatuses.Remove(this);
					}
					this._Debtor.Entity = value;
					if ((value != null))
					{
						value.MaritalStatuses.Add(this);
						this._Id = value.MaritalStatusID;
					}
					else
					{
						this._Id = default(int);
					}
					this.SendPropertyChanged("Debtor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DebtorContactDetails")]
	public partial class DebtorContactDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _DebtorID;
		
		private string _StreetAddress1;
		
		private string _StreetAddress2;
		
		private string _StreetAddress3;
		
		private string _StreetAddressPostalCode;
		
		private string _PostalAddress1;
		
		private string _PostalAddress2;
		
		private string _PostalAddress3;
		
		private string _PostalAddressCode;
		
		private string _TelHome;
		
		private string _TelWork;
		
		private string _TelCell;
		
		private string _TelFax;
		
		private string _email1;
		
		private string _email2;
		
		private System.Nullable<System.DateTime> _DateAdded;
		
		private bool _isActive;
		
		private EntitySet<Debtor> _Debtors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDebtorIDChanging(int value);
    partial void OnDebtorIDChanged();
    partial void OnStreetAddress1Changing(string value);
    partial void OnStreetAddress1Changed();
    partial void OnStreetAddress2Changing(string value);
    partial void OnStreetAddress2Changed();
    partial void OnStreetAddress3Changing(string value);
    partial void OnStreetAddress3Changed();
    partial void OnStreetAddressPostalCodeChanging(string value);
    partial void OnStreetAddressPostalCodeChanged();
    partial void OnPostalAddress1Changing(string value);
    partial void OnPostalAddress1Changed();
    partial void OnPostalAddress2Changing(string value);
    partial void OnPostalAddress2Changed();
    partial void OnPostalAddress3Changing(string value);
    partial void OnPostalAddress3Changed();
    partial void OnPostalAddressCodeChanging(string value);
    partial void OnPostalAddressCodeChanged();
    partial void OnTelHomeChanging(string value);
    partial void OnTelHomeChanged();
    partial void OnTelWorkChanging(string value);
    partial void OnTelWorkChanged();
    partial void OnTelCellChanging(string value);
    partial void OnTelCellChanged();
    partial void OnTelFaxChanging(string value);
    partial void OnTelFaxChanged();
    partial void Onemail1Changing(string value);
    partial void Onemail1Changed();
    partial void Onemail2Changing(string value);
    partial void Onemail2Changed();
    partial void OnDateAddedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateAddedChanged();
    partial void OnisActiveChanging(bool value);
    partial void OnisActiveChanged();
    #endregion
		
		public DebtorContactDetail()
		{
			this._Debtors = new EntitySet<Debtor>(new Action<Debtor>(this.attach_Debtors), new Action<Debtor>(this.detach_Debtors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DebtorID", DbType="Int NOT NULL")]
		public int DebtorID
		{
			get
			{
				return this._DebtorID;
			}
			set
			{
				if ((this._DebtorID != value))
				{
					this.OnDebtorIDChanging(value);
					this.SendPropertyChanging();
					this._DebtorID = value;
					this.SendPropertyChanged("DebtorID");
					this.OnDebtorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StreetAddress1", DbType="VarChar(800)")]
		public string StreetAddress1
		{
			get
			{
				return this._StreetAddress1;
			}
			set
			{
				if ((this._StreetAddress1 != value))
				{
					this.OnStreetAddress1Changing(value);
					this.SendPropertyChanging();
					this._StreetAddress1 = value;
					this.SendPropertyChanged("StreetAddress1");
					this.OnStreetAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StreetAddress2", DbType="VarChar(800)")]
		public string StreetAddress2
		{
			get
			{
				return this._StreetAddress2;
			}
			set
			{
				if ((this._StreetAddress2 != value))
				{
					this.OnStreetAddress2Changing(value);
					this.SendPropertyChanging();
					this._StreetAddress2 = value;
					this.SendPropertyChanged("StreetAddress2");
					this.OnStreetAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StreetAddress3", DbType="VarChar(800)")]
		public string StreetAddress3
		{
			get
			{
				return this._StreetAddress3;
			}
			set
			{
				if ((this._StreetAddress3 != value))
				{
					this.OnStreetAddress3Changing(value);
					this.SendPropertyChanging();
					this._StreetAddress3 = value;
					this.SendPropertyChanged("StreetAddress3");
					this.OnStreetAddress3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StreetAddressPostalCode", DbType="VarChar(5)")]
		public string StreetAddressPostalCode
		{
			get
			{
				return this._StreetAddressPostalCode;
			}
			set
			{
				if ((this._StreetAddressPostalCode != value))
				{
					this.OnStreetAddressPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._StreetAddressPostalCode = value;
					this.SendPropertyChanged("StreetAddressPostalCode");
					this.OnStreetAddressPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalAddress1", DbType="VarChar(800)")]
		public string PostalAddress1
		{
			get
			{
				return this._PostalAddress1;
			}
			set
			{
				if ((this._PostalAddress1 != value))
				{
					this.OnPostalAddress1Changing(value);
					this.SendPropertyChanging();
					this._PostalAddress1 = value;
					this.SendPropertyChanged("PostalAddress1");
					this.OnPostalAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalAddress2", DbType="VarChar(800)")]
		public string PostalAddress2
		{
			get
			{
				return this._PostalAddress2;
			}
			set
			{
				if ((this._PostalAddress2 != value))
				{
					this.OnPostalAddress2Changing(value);
					this.SendPropertyChanging();
					this._PostalAddress2 = value;
					this.SendPropertyChanged("PostalAddress2");
					this.OnPostalAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalAddress3", DbType="VarChar(800)")]
		public string PostalAddress3
		{
			get
			{
				return this._PostalAddress3;
			}
			set
			{
				if ((this._PostalAddress3 != value))
				{
					this.OnPostalAddress3Changing(value);
					this.SendPropertyChanging();
					this._PostalAddress3 = value;
					this.SendPropertyChanged("PostalAddress3");
					this.OnPostalAddress3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalAddressCode", DbType="VarChar(5)")]
		public string PostalAddressCode
		{
			get
			{
				return this._PostalAddressCode;
			}
			set
			{
				if ((this._PostalAddressCode != value))
				{
					this.OnPostalAddressCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalAddressCode = value;
					this.SendPropertyChanged("PostalAddressCode");
					this.OnPostalAddressCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelHome", DbType="VarChar(10)")]
		public string TelHome
		{
			get
			{
				return this._TelHome;
			}
			set
			{
				if ((this._TelHome != value))
				{
					this.OnTelHomeChanging(value);
					this.SendPropertyChanging();
					this._TelHome = value;
					this.SendPropertyChanged("TelHome");
					this.OnTelHomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelWork", DbType="VarChar(10)")]
		public string TelWork
		{
			get
			{
				return this._TelWork;
			}
			set
			{
				if ((this._TelWork != value))
				{
					this.OnTelWorkChanging(value);
					this.SendPropertyChanging();
					this._TelWork = value;
					this.SendPropertyChanged("TelWork");
					this.OnTelWorkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelCell", DbType="VarChar(10)")]
		public string TelCell
		{
			get
			{
				return this._TelCell;
			}
			set
			{
				if ((this._TelCell != value))
				{
					this.OnTelCellChanging(value);
					this.SendPropertyChanging();
					this._TelCell = value;
					this.SendPropertyChanged("TelCell");
					this.OnTelCellChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelFax", DbType="VarChar(10)")]
		public string TelFax
		{
			get
			{
				return this._TelFax;
			}
			set
			{
				if ((this._TelFax != value))
				{
					this.OnTelFaxChanging(value);
					this.SendPropertyChanging();
					this._TelFax = value;
					this.SendPropertyChanged("TelFax");
					this.OnTelFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email1", DbType="VarChar(400)")]
		public string email1
		{
			get
			{
				return this._email1;
			}
			set
			{
				if ((this._email1 != value))
				{
					this.Onemail1Changing(value);
					this.SendPropertyChanging();
					this._email1 = value;
					this.SendPropertyChanged("email1");
					this.Onemail1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email2", DbType="VarChar(400)")]
		public string email2
		{
			get
			{
				return this._email2;
			}
			set
			{
				if ((this._email2 != value))
				{
					this.Onemail2Changing(value);
					this.SendPropertyChanging();
					this._email2 = value;
					this.SendPropertyChanged("email2");
					this.Onemail2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this.OnDateAddedChanging(value);
					this.SendPropertyChanging();
					this._DateAdded = value;
					this.SendPropertyChanged("DateAdded");
					this.OnDateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isActive", DbType="Bit NOT NULL")]
		public bool isActive
		{
			get
			{
				return this._isActive;
			}
			set
			{
				if ((this._isActive != value))
				{
					this.OnisActiveChanging(value);
					this.SendPropertyChanging();
					this._isActive = value;
					this.SendPropertyChanged("isActive");
					this.OnisActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DebtorContactDetail_Debtor", Storage="_Debtors", ThisKey="DebtorID", OtherKey="Id")]
		public EntitySet<Debtor> Debtors
		{
			get
			{
				return this._Debtors;
			}
			set
			{
				this._Debtors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Debtors(Debtor entity)
		{
			this.SendPropertyChanging();
			entity.DebtorContactDetail = this;
		}
		
		private void detach_Debtors(Debtor entity)
		{
			this.SendPropertyChanging();
			entity.DebtorContactDetail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CaseStatuses")]
	public partial class CaseStatuse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Description;
		
		private bool _isActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnisActiveChanging(bool value);
    partial void OnisActiveChanged();
    #endregion
		
		public CaseStatuse()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(150)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isActive", DbType="Bit NOT NULL")]
		public bool isActive
		{
			get
			{
				return this._isActive;
			}
			set
			{
				if ((this._isActive != value))
				{
					this.OnisActiveChanging(value);
					this.SendPropertyChanging();
					this._isActive = value;
					this.SendPropertyChanged("isActive");
					this.OnisActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompanySetups")]
	public partial class CompanySetup1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CompanyName;
		
		private string _CompanyRegistrationNumber;
		
		private string _PhisicalAddress1;
		
		private string _PhisicalAddress2;
		
		private string _PhisicalAddress3;
		
		private string _PhisicalAddressCode;
		
		private string _PostalAddress1;
		
		private string _PostalAddress2;
		
		private string _PostalAddress3;
		
		private string _PostalAddressCode;
		
		private string _Telephone;
		
		private string _Fax;
		
		private string _Email;
		
		private string _VatRegistrationNumber;
		
		private bool _isActive;
		
		private System.DateTime _DateCreated;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnCompanyRegistrationNumberChanging(string value);
    partial void OnCompanyRegistrationNumberChanged();
    partial void OnPhisicalAddress1Changing(string value);
    partial void OnPhisicalAddress1Changed();
    partial void OnPhisicalAddress2Changing(string value);
    partial void OnPhisicalAddress2Changed();
    partial void OnPhisicalAddress3Changing(string value);
    partial void OnPhisicalAddress3Changed();
    partial void OnPhisicalAddressCodeChanging(string value);
    partial void OnPhisicalAddressCodeChanged();
    partial void OnPostalAddress1Changing(string value);
    partial void OnPostalAddress1Changed();
    partial void OnPostalAddress2Changing(string value);
    partial void OnPostalAddress2Changed();
    partial void OnPostalAddress3Changing(string value);
    partial void OnPostalAddress3Changed();
    partial void OnPostalAddressCodeChanging(string value);
    partial void OnPostalAddressCodeChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnVatRegistrationNumberChanging(string value);
    partial void OnVatRegistrationNumberChanged();
    partial void OnisActiveChanging(bool value);
    partial void OnisActiveChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public CompanySetup1()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="VarChar(500)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyRegistrationNumber", DbType="VarChar(100)")]
		public string CompanyRegistrationNumber
		{
			get
			{
				return this._CompanyRegistrationNumber;
			}
			set
			{
				if ((this._CompanyRegistrationNumber != value))
				{
					this.OnCompanyRegistrationNumberChanging(value);
					this.SendPropertyChanging();
					this._CompanyRegistrationNumber = value;
					this.SendPropertyChanged("CompanyRegistrationNumber");
					this.OnCompanyRegistrationNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhisicalAddress1", DbType="VarChar(800)")]
		public string PhisicalAddress1
		{
			get
			{
				return this._PhisicalAddress1;
			}
			set
			{
				if ((this._PhisicalAddress1 != value))
				{
					this.OnPhisicalAddress1Changing(value);
					this.SendPropertyChanging();
					this._PhisicalAddress1 = value;
					this.SendPropertyChanged("PhisicalAddress1");
					this.OnPhisicalAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhisicalAddress2", DbType="VarChar(800)")]
		public string PhisicalAddress2
		{
			get
			{
				return this._PhisicalAddress2;
			}
			set
			{
				if ((this._PhisicalAddress2 != value))
				{
					this.OnPhisicalAddress2Changing(value);
					this.SendPropertyChanging();
					this._PhisicalAddress2 = value;
					this.SendPropertyChanged("PhisicalAddress2");
					this.OnPhisicalAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhisicalAddress3", DbType="VarChar(800)")]
		public string PhisicalAddress3
		{
			get
			{
				return this._PhisicalAddress3;
			}
			set
			{
				if ((this._PhisicalAddress3 != value))
				{
					this.OnPhisicalAddress3Changing(value);
					this.SendPropertyChanging();
					this._PhisicalAddress3 = value;
					this.SendPropertyChanged("PhisicalAddress3");
					this.OnPhisicalAddress3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhisicalAddressCode", DbType="VarChar(5)")]
		public string PhisicalAddressCode
		{
			get
			{
				return this._PhisicalAddressCode;
			}
			set
			{
				if ((this._PhisicalAddressCode != value))
				{
					this.OnPhisicalAddressCodeChanging(value);
					this.SendPropertyChanging();
					this._PhisicalAddressCode = value;
					this.SendPropertyChanged("PhisicalAddressCode");
					this.OnPhisicalAddressCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalAddress1", DbType="VarChar(800)")]
		public string PostalAddress1
		{
			get
			{
				return this._PostalAddress1;
			}
			set
			{
				if ((this._PostalAddress1 != value))
				{
					this.OnPostalAddress1Changing(value);
					this.SendPropertyChanging();
					this._PostalAddress1 = value;
					this.SendPropertyChanged("PostalAddress1");
					this.OnPostalAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalAddress2", DbType="VarChar(800)")]
		public string PostalAddress2
		{
			get
			{
				return this._PostalAddress2;
			}
			set
			{
				if ((this._PostalAddress2 != value))
				{
					this.OnPostalAddress2Changing(value);
					this.SendPropertyChanging();
					this._PostalAddress2 = value;
					this.SendPropertyChanged("PostalAddress2");
					this.OnPostalAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalAddress3", DbType="VarChar(800)")]
		public string PostalAddress3
		{
			get
			{
				return this._PostalAddress3;
			}
			set
			{
				if ((this._PostalAddress3 != value))
				{
					this.OnPostalAddress3Changing(value);
					this.SendPropertyChanging();
					this._PostalAddress3 = value;
					this.SendPropertyChanged("PostalAddress3");
					this.OnPostalAddress3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalAddressCode", DbType="VarChar(5)")]
		public string PostalAddressCode
		{
			get
			{
				return this._PostalAddressCode;
			}
			set
			{
				if ((this._PostalAddressCode != value))
				{
					this.OnPostalAddressCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalAddressCode = value;
					this.SendPropertyChanged("PostalAddressCode");
					this.OnPostalAddressCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="VarChar(10)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="VarChar(10)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(10)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VatRegistrationNumber", DbType="VarChar(100)")]
		public string VatRegistrationNumber
		{
			get
			{
				return this._VatRegistrationNumber;
			}
			set
			{
				if ((this._VatRegistrationNumber != value))
				{
					this.OnVatRegistrationNumberChanging(value);
					this.SendPropertyChanging();
					this._VatRegistrationNumber = value;
					this.SendPropertyChanged("VatRegistrationNumber");
					this.OnVatRegistrationNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isActive", DbType="Bit NOT NULL")]
		public bool isActive
		{
			get
			{
				return this._isActive;
			}
			set
			{
				if ((this._isActive != value))
				{
					this.OnisActiveChanging(value);
					this.SendPropertyChanging();
					this._isActive = value;
					this.SendPropertyChanged("isActive");
					this.OnisActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MaritalStatuses")]
	public partial class MaritalStatuse1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Description;
		
		private bool _isActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnisActiveChanging(bool value);
    partial void OnisActiveChanged();
    #endregion
		
		public MaritalStatuse1()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isActive", DbType="Bit NOT NULL")]
		public bool isActive
		{
			get
			{
				return this._isActive;
			}
			set
			{
				if ((this._isActive != value))
				{
					this.OnisActiveChanging(value);
					this.SendPropertyChanging();
					this._isActive = value;
					this.SendPropertyChanged("isActive");
					this.OnisActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Genders")]
	public partial class Gender1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Description;
		
		private bool _isActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnisActiveChanging(bool value);
    partial void OnisActiveChanged();
    #endregion
		
		public Gender1()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isActive", DbType="Bit NOT NULL")]
		public bool isActive
		{
			get
			{
				return this._isActive;
			}
			set
			{
				if ((this._isActive != value))
				{
					this.OnisActiveChanging(value);
					this.SendPropertyChanging();
					this._isActive = value;
					this.SendPropertyChanged("isActive");
					this.OnisActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
